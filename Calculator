import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class ButtonLayout extends JFrame implements ActionListener{
    JFrame frame;
    JTextField textField;
    JButton[] buttonsNumbers = new JButton[10];
    JButton[] buttonsFunctions = new JButton[9];
    JButton buttonPlus, buttonMinus, buttonMultiply,
            buttonDivide, buttonEquals, buttonPoint, buttonReset, buttonDelete, buttonNeg;
    JPanel panel;

    double num1=0, num2=0, result=0;
    char operator;

    ButtonLayout() {

        frame = new JFrame();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(null);
        frame.setSize(350, 480);
        frame.setTitle("Java Calculator");
        frame.setResizable(false);

        textField = new JTextField();
        textField.setBounds(50,25,230,50);
        textField.setFont(new Font("Arial", Font.BOLD, 20));
        textField.setEditable(false);

        buttonPlus = new JButton("+");
        buttonMinus = new JButton("-");
        buttonMultiply = new JButton("*");
        buttonDivide = new JButton("/");
        buttonEquals = new JButton("=");
        buttonPoint = new JButton(",");
        buttonNeg = new JButton("(-)");

        buttonDelete = new JButton("Delete");
        buttonReset = new JButton("Reset");

        buttonsFunctions[0] = buttonPlus;
        buttonsFunctions[1] = buttonMinus;
        buttonsFunctions[2] = buttonMultiply;
        buttonsFunctions[3] = buttonDivide;
        buttonsFunctions[4] = buttonEquals;
        buttonsFunctions[5] = buttonPoint;
        buttonsFunctions[6] = buttonReset;
        buttonsFunctions[7] = buttonDelete;
        buttonsFunctions[8] = buttonNeg;

        for (int i = 0; i < 9; i++) {
            buttonsFunctions[i].addActionListener(this);
            buttonsFunctions[i].setFont(new Font("Arial", Font.BOLD, 13));
            buttonsFunctions[i].setFocusable(false);
        }
        for (int i = 0; i < 10; i++) {
            buttonsNumbers[i] = new JButton(String.valueOf(i));
            buttonsNumbers[i].addActionListener(this);
            buttonsNumbers[i].setFocusable(false);
            buttonsNumbers[i].setFont(new Font("Arial", Font.BOLD, 13));
        }

        buttonDelete.setBounds(110,350,80,50);
        buttonReset.setBounds(200,350,80,50);
        buttonEquals.setBounds(50,350,50,50);

        panel = new JPanel();
        panel.setBounds(50,100,230,230);
        panel.setLayout(new GridLayout(4,4,10,10));


        panel.add(buttonsNumbers[1]);
        panel.add(buttonsNumbers[2]);
        panel.add(buttonsNumbers[3]);
        panel.add(buttonPlus);
        panel.add(buttonsNumbers[4]);
        panel.add(buttonsNumbers[5]);
        panel.add(buttonsNumbers[6]);
        panel.add(buttonMinus);
        panel.add(buttonsNumbers[7]);
        panel.add(buttonsNumbers[8]);
        panel.add(buttonsNumbers[9]);
        panel.add(buttonMultiply);
        panel.add(buttonDivide);
        panel.add(buttonsNumbers[0]);
        panel.add(buttonDivide);
        panel.add(buttonPoint);
        panel.add(buttonNeg);


        frame.add(panel);
        frame.add(textField);
        frame.add(buttonDelete);
        frame.add(buttonReset);
        frame.add(buttonEquals);
        frame.setVisible(true);
    }
    @Override
    public void actionPerformed(ActionEvent e) {

        for(int i = 0; i < 10; i++) {
        if(e.getSource() == buttonsNumbers[i]) {
        textField.setText(textField.getText().concat(String.valueOf(i)));
        }
        }
        if(e.getSource()==buttonPoint) {
        textField.setText(textField.getText().concat("."));
        }
        if(e.getSource()==buttonPlus) {
        num1 = Double.parseDouble(textField.getText());
        operator ='+';
        textField.setText("");
        }
        if(e.getSource()==buttonMinus) {
        num1 = Double.parseDouble(textField.getText());
        operator ='-';
        textField.setText("");
        }
        if(e.getSource()==buttonMultiply) {
        num1 = Double.parseDouble(textField.getText());
        operator ='*';
        textField.setText("");
        }
        if(e.getSource()==buttonDivide) {
        num1 = Double.parseDouble(textField.getText());
        operator ='/';
        textField.setText("");
        }
        if(e.getSource()==buttonEquals) {
        num2 = Double.parseDouble(textField.getText());

        switch(operator) {
        case '+':
        result = num1 + num2;
        break;
        case '-':
        result = num1 - num2;
        break;
        case '*':
        result = num1 * num2;
        break;
        case '/':
        result = num1 / num2;
        break;
        }
        textField.setText(String.valueOf(result));
        num1 = result;
        }
        if(e.getSource()== buttonReset) {
        textField.setText("");
        }
        if(e.getSource()==buttonDelete) {
        String delString = textField.getText();
        textField.setText("");
        for(int i = 0; i < delString.length() - 1; i++) {
        textField.setText(textField.getText() + delString.charAt(i));
        }
        }
        if(e.getSource() == buttonNeg) {
        double intoNeg = Double.parseDouble(textField.getText());
        intoNeg *= -1;
        textField.setText(String.valueOf(intoNeg));
        }
       }
    }
